trigger:
  - main

resources:
  - repo: self

variables:
  dockerRegistryServiceConnection: "70193de8-17c3-4d45-aed9-7b6d459cb210"
  imageRepository: "martinsutherlandazurepipelinedemo"
  containerRegistry: "customersapp.azurecr.io"
  dockerfilePath: "$(Build.SourcesDirectory)/Dockerfile"
  tag: "$(Build.BuildId)"
  appName: "Azure-test-App-Two"
  azureSubscription: "Azure subscription 1 (12d4a125-7d4d-45ad-8101-2ba4e5ce1593)"
  vmImageName: "ubuntu-latest"
  uiSource: "/src"

stages:
  - stage: Test
    displayName: Test stage
    jobs:
      - job: BuildAndRunDocker
        displayName: Build and Run Docker Container
        steps:
          - script: |

              docker build -t docker-app .


              docker run -p 3000:3000 -d --name docker-app

      - job: RunTestsInDocker
        displayName: Run Tests in Docker Container
        steps:
          - script: |

              npx playwright test /tests/example.spec.ts
            displayName: "Run Tests in Docker"

      - job: StopDockerContainer
        displayName: Stop Docker Container
        steps:
          - script: |

              docker stop docker-app-container
              docker rm docker-app-container
            displayName: "Stop Docker Container"

  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Push stage
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

  - stage: Deploy
    displayName: Deploy
    jobs:
      - job: Deploy
        displayName: Deploy
        steps:
          - task: AzureWebAppContainer@1
            displayName: "Deploy stage"
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(appName)
              imageName: $(containerRegistry)/$(imageRepository):$(tag)
